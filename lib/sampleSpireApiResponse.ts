import { Order } from "@/types/spire";

interface SalesOrderResponse {
  records: Order[];
  start: number;
  limit: number;
  count: number;
}

const sampleOrder: Order = {
  id: 1001,
  orderNo: "00010001",
  invoiceNo: null,
  customer: {
    id: 1,
    customerNo: "CUST001",
    name: "Alice Johnson",
    invoiceType: "Regular",
    userDef2: "",
    backgroundColor: 0,
    foregroundColor: 0,
    hold: false,
  },
  status: "L",
  type: "O",
  hold: false,
  orderDate: "2025-04-16",
  invoiceDate: null,
  requiredDate: "2025-04-17",
  customerPO: "PO001",
  batchNo: null,
  division: "000",
  location: "",
  profitCenter: null,
  fob: "FOB1",
  incoterms: null,
  incotermsPlace: null,
  salespersonNo: "WEB",
  territoryCode: "GLN",
  freight: "0",
  weight: "10",
  discount: "0",
  totalDiscount: "0",
  subtotal: "200.00",
  total: "210.00",
  baseTotal: "210.00",
  total2: "210.00",
  totalOrdered: "210.00",
  subtotalOrdered: "200.00",
  backordered: false,
  totalBackorderQty: "0",
  grossProfit: "120.00",
  grossProfitMargin: "57.14",
  grossProfit2: "120.00",
  totalCostAverage: "90.00",
  totalCostAverage2: "90.00",
  totalCostCurrent: "90.00",
  totalCostCurrent2: "90.00",
  totalCostStandard: "90.00",
  totalCostStandard2: "90.00",
  phaseId: "",
  termsCode: "02",
  termsText: "COD",
  referenceNo: null,
  currency: "USD",
  shippingCarrier: null,
  shipDate: null,
  trackingNo: null,
  jobNo: null,
  jobAccountNo: null,
  wasQuoteNo: null,
  quoteExpires: null,
  amountPaid: "210.00",
  amountUnpaid: "0",
  amountUnpaidOrdered: "0",
  percentPaid: "100",
  address: {
    id: 1,
    name: "Alice Johnson",
    country: "USA",
    city: "Glendale",
    provState: "CA",
    postalCode: "91203",
    line1: "123 Maple St",
    line2: "",
    line3: "",
    line4: "",
  },
  shippingAddress: {
    id: 1,
    name: "Alice Johnson",
    country: "USA",
    city: "Glendale",
    provState: "CA",
    postalCode: "91203",
    line1: "123 Maple St",
    line2: "",
    line3: "",
    line4: "",
    shipCode: "PICKUP",
    shipId: "GLN01",
    shipDescription: "Local Pickup - Glendale",
  },
  contact: {
    name: "Alice Johnson",
    email: "alice@example.com",
    phone: { number: "555-123-4567" },
  },
  ediAssociation: { id: 1, status: "Active" },
  created: new Date().toISOString(),
  createdBy: "WEBPORTAL",
  modified: new Date().toISOString(),
  modifiedBy: "WEBPORTAL",
  deleted: null,
  deletedBy: null,
  udf: { order_source: "INTERNET" },
  links: { self: "https://example.com/orders/1001" },
}

export const sampleSpireApiResponse: SalesOrderResponse = {
  records: [
    sampleOrder,
    // Clone and modify the above record 9 more times
    ...Array.from({ length: 19 }).map((_, i) => {
      const id = 1002 + i;
      return {
        ...JSON.parse(JSON.stringify(sampleOrder)),
        id,
        orderNo: `0001000${id - 1000}`,
        customer: {
          ...sampleOrder.customer,
          id: id,
          customerNo: `CUST00${id}`,
          name: `Customer ${id}`,
        },
        contact: {
          name: `Customer ${id}`,
          email: `cust${id}@example.com`,
          phone: { number: `555-000-${1000 + id}` },
        },
        address: {
          ...sampleOrder.address,
          id,
          name: `Customer ${id}`,
        },
        shippingAddress: {
          ...sampleOrder.shippingAddress,
          id,
          name: `Customer ${id}`,
          shipId: `GLN0${id}`,
        },
        created: new Date(Date.now() - i * 60000).toISOString(), // staggered creation times
        modified: new Date(Date.now() - i * 30000).toISOString(),
      };
    }),
  ],
  start: 0,
  limit: 10,
  count: 10,
};
